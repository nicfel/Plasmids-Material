<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate='Standard' beautistatus='' namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.base.evolution.alignment:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.tree.coalescent:beast.pkgmgmt:beast.base.core:beast.base.inference.util:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.base.evolution.tree:beast.base.inference" required="BEAST.base v2.7.3:CoalRe v1.0.1:CoalPT v0.0.1" version="2.7">

    insert_alignment


    <map name="Uniform" >beast.base.inference.distribution.Uniform</map>
    <map name="Exponential" >beast.base.inference.distribution.Exponential</map>
    <map name="LogNormal" >beast.base.inference.distribution.LogNormalDistributionModel</map>
    <map name="Normal" >beast.base.inference.distribution.Normal</map>
    <map name="Beta" >beast.base.inference.distribution.Beta</map>
    <map name="Gamma" >beast.base.inference.distribution.Gamma</map>
    <map name="LaplaceDistribution" >beast.base.inference.distribution.LaplaceDistribution</map>
    <map name="prior" >beast.base.inference.distribution.Prior</map>
    <map name="InverseGamma" >beast.base.inference.distribution.InverseGamma</map>
    <map name="OneOnX" >beast.base.inference.distribution.OneOnX</map>


    insert_taxa
    <trait spec="TraitSet" traitname="date" dateFormat="yyyy-M-dd" id="traitSet">
      insert_sampling_times
        <taxa idref="taxonSet"/>
    </trait>

    insert_run_header



        <state>
          insert_seg_tree_state
          
          <stateNode id="network" spec="coalpt.simulator.SimulatedCoalescentWithPlamidsNetwork"
                     nPlasmids="insert_nr_plasmids" enableSegmentTreeUpdate="false">

              <traitSet idref="traitSet"/>

              <populationModel spec="ConstantPopulation">
                  <popSize spec="parameter.RealParameter" value="100"/>
              </populationModel>
              <plasmidTransferRate spec="parameter.RealParameter" value="0"/>
              insert_taxonsets
          </stateNode>
          <stateNode spec="parameter.RealParameter" id="plasmidTransferRate" value="0.1"/>
        <parameter spec="parameter.RealParameter" id="clockRate.c" name="stateNode">1</parameter>
        <parameter spec="parameter.RealParameter" id="popSize" name="stateNode">2</parameter>
        
        <parameter spec="parameter.RealParameter" id="Ne" name="stateNode" dimension="1" upper="5000">100</parameter>
        <parameter spec="parameter.RealParameter" id="sigma.Ne" name="stateNode" dimension="1">2</parameter>
        <parameter spec="parameter.RealParameter" id="rateShifts" name="stateNode" dimension="1">1 2 3 4 5 6 7 8 9 10 100 1000 10000000</parameter>
        insert_parameters
        </state>
        
        <init spec='beast.base.evolution.tree.ClusterTree' id='UPGMATree.t:XYZ26'
          initial="@insert_corename.tree" clusterType='upgma' taxa='@insert_corename'/>

        <init spec='coalpt.util.InitFromTree' id='initnetwork'
          tree="@insert_corename.tree" network='@network'>
          insert_taxonsets
        </init>

        
        <init spec="coalre.network.SegmentTreeInitializer" network="@network">
          insert_seg_tree
        </init>


        <distribution id="posterior" spec="CompoundDistribution">
            <distribution id="likelihood" spec="CompoundDistribution">
              insert_tree_likelihood
            </distribution>

            <distribution id="prior" spec="CompoundDistribution">
                <distribution id="networkPrior" spec="coalpt.distribution.CoalescentWithPlasmids">
                    <networkIntervals spec="coalpt.distribution.PlasmidNetworkIntervals" network="@network">
                        <plasmidTransferRate idref="plasmidTransferRate"/>
                    </networkIntervals>

<!--                    <populationModel id="Skygrid" spec="nab.skygrid.Skygrowth" logNe="@Ne" rateShifts="@rateShifts"/>-->
                    <populationModel id="constPop" spec="ConstantPopulation">
                        <popSize idref="Ne"/>
                    </populationModel>


                </distribution>

                <prior id="ClockPrior.c" name="distribution" x="@clockRate.c">
                  <OneOnX id="Uniform.0" name="distr"/>
                </prior>
                
<!--                <prior id="Sigmaprior1" name="distribution" x="@sigma.Ne">-->
<!--                    <LogNormal id="Uniform.333" name="distr" M="0" S="4"/>-->
<!--                </prior>-->
<!--                <distribution spec='beast.mascot.skyline.LogSmoothingPrior' NeLog="@Ne">-->
<!--                    <distr spec="beast.math.distributions.Normal"  mean="0">-->
<!--                        <sigma idref="sigma.Ne"/>-->
<!--                    </distr>-->
<!--                    <initialDistr spec="beast.math.distributions.Normal"  mean="0" sigma="3"/>-->
<!--                </distribution>-->


                insert_priors

                <prior id="PopSizePrior" name="distribution" x="@Ne">
                  <LogNormal id="LogNormalDistributionModel.PopSize" name="distr" M="0" S="4"/>
                </prior>

                <distribution spec="beast.base.inference.distribution.Prior" x="@plasmidTransferRate">
                    <LogNormal id="LogNormalDistributionModel.pt" name="distr" M="0" S="4"/>
                </distribution>


            </distribution>
        </distribution>


        
<!--        <operator id="AMVGoperator1" spec="AdaptableVarianceMultivariateNormalOperator" every="100" beta="0.5" scaleFactor="0.01" weight="5.0" initial="10">-->
<!--                <transformations spec="beast.util.Transform$NoTransform" f="@Ne"/>-->
<!--                <transformations spec="beast.util.Transform$LogTransform" f="@sigma.Ne"/>-->
<!--       </operator>-->

    
        <operator id="plasmidTransferRateCwRScaler" spec="AdaptableOperatorSampler" weight="1">
            <parameter idref="plasmidTransferRate"/>
            <operator id="AVMNOperator.h1n1daspdm_NA" spec="kernel.AdaptableVarianceMultivariateNormalOperator" allowNonsense="true" beta="0.05" burnin="400" initial="800" weight="0.1">
                <transformations id="AVMNLogTransform.h1n1czxpdm_NA" spec="operator.kernel.Transform$LogTransform">
                    <f idref="plasmidTransferRate"/>
                    <f idref="Ne"/>
                </transformations>
                <transformations id="AVMNNoTransform.h1n1pdm_NA" spec="operator.kernel.Transform$NoTransform"/>
                <kernelDistribution id="KernelDistribution$Bactrian.da7" spec="operator.kernel.KernelDistribution$Bactrian"/>
            </operator>
            <operator id="plasmidTransferRateCwRScale.alltrees" spec="kernel.BactrianScaleOperator" parameter="@plasmidTransferRate" scaleFactor="0.5" upper="10.0" weight="1.0"/>
        </operator>
    
        <operator id="NeScaler" spec="AdaptableOperatorSampler" weight="1">
            <parameter idref="Ne"/>
            <operator idref="AVMNOperator.h1n1daspdm_NA"/>
            <operator id="popSizeCwRScale.alltrees" spec="kernel.BactrianScaleOperator" parameter="@Ne" scaleFactor="0.5" upper="10.0" weight="1.0"/>
        </operator>

        insert_operators


<!--        <operator id="FixMeanMutationRatesOperator" spec="DeltaExchangeOperator" delta="0.75" weight="3.0">
          insert_mut_par
          <weightvector id="weightparameter" spec="parameter.IntegerParameter" dimension="1" estimate="false">
            insert_weights
          </weightvector>
       </operator>-->

        <operator id="upDownOperator" spec="coalre.operators.NetworkScaleOperator" network="@network" weight="1.0" scaleFactor="0.01">
            insert_seg_tree
            <upParameter idref="Ne"/>
            <downParameter idref="plasmidTransferRate"/>
            insert_mut_par
        </operator>
        
       
        <operator spec="coalpt.operators.AddRemovePlasmid" network="@network" alpha="1.0" weight="30.0">
          insert_seg_tree
        </operator>

        <operator spec="coalpt.operators.AddRemovePlasmidCoalescent" network="@network" weight="30.0" coalescentWithPlasmids="@networkPrior">
          insert_seg_tree
        </operator>

        <operator spec="coalre.operators.UniformNetworkNodeHeightOperator" network="@network" weight="20.0">
          insert_seg_tree
        </operator>

        <operator id="NetworkScale" spec="coalre.operators.NetworkScaleOperator" network="@network" weight="1.0" scaleFactor="0.01">
          insert_seg_tree
        </operator>

        <operator id="NetworkScaleRootOnly" spec="coalre.operators.NetworkScaleOperator" network="@network" scaleRootOnly="true" weight="1.0" scaleFactor="0.01">
          insert_seg_tree
        </operator>

        <operator spec="coalpt.operators.PlasmidNetworkExchange" network="@network" isNarrow="false" weight="10.0">
          insert_seg_tree
        </operator>

        <operator spec="coalpt.operators.PlasmidNetworkExchange" network="@network" isNarrow="true" weight="5.0">
          insert_seg_tree
        </operator>

        <operator spec="coalpt.operators.SubPlasmidNetworkSlide" network="@network" weight="30.0">
          insert_seg_tree
        </operator>

        <operator id="GibbsOperatorAbovePlasmidRoots" spec="coalpt.operators.GibbsOperatorAbovePlasmidRoots" network="@network" weight="3.0"  coalescentWithPlasmids="@networkPrior">
          insert_seg_tree
        </operator>


        <logger spec="Logger" logEvery="50000" mode="tree" fileName="$(filebase).network.trees">
            <log spec="coalpt.statistics.PlasmidNetworkLogger" network="@network"/>
        </logger>

        insert_seg_logger


        <logger spec="Logger" logEvery="50000" fileName="$(filebase).log">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="networkPrior"/>
<!--            <log spec="NetworkStatsLogger" network="@network"/>-->
            <log spec="coalpt.statistics.PlasmidNetworkStatsLogger" network="@network" plasmidTransferRate="@plasmidTransferRate">
              insert_seg_tree
            </log>
            <log idref="Ne"/>
            <log idref="sigma.Ne"/>
           <log idref="plasmidTransferRate"/>
            insert_stats_log
            <log idref="clockRate.c"/>
            insert_param_log
        </logger>

        <logger id="screenlog" spec="Logger" logEvery="10000">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
<!--            <log spec="NetworkStatsLogger" network="@network"/>-->
            <log spec="ESS" arg="@posterior"/>
        </logger>

    </run>
</beast>
